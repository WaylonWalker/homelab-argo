apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    service: wayl-one
  name: wayl-one
  namespace: testauth
spec:
  ports:
    - name: "80"
      port: 80
      targetPort: 80
  selector:
    service: wayl-one
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: testauth
  namespace: testauth
spec: {}
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    service: wayl-one
  name: wayl-one
  namespace: testauth
spec:
  replicas: 1
  selector:
    matchLabels:
      service: wayl-one
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        service: wayl-one
    spec:
      containers:
        - image: docker.io/waylonwalker/wayl-one:v1
          name: wayl-one
          ports:
            - containerPort: 80
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    # authentication type
    nginx.ingress.kubernetes.io/auth-type: basic
    # name of the secret that contains the user/password definitions
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    # message to display with an appropriate context why the authentication is required
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required - user'
  creationTimestamp: null
  labels:
    service: wayl-one
  name: wayl-one
  namespace: testauth
spec:
  ingressClassName: nginx
  rules:
    - host: auth.wayl.one
      http:
        paths:
          - backend:
              service:
                name: wayl-one
                port:
                  number: 80
            path: /
            pathType: Prefix
status:
  loadBalancer: {}

# ---
# # Note: in a kubernetes secret the string (e.g. generated by htpasswd) must be base64-encoded first.
# # To create an encoded user:password pair, the following command can be used:
# # htpasswd -nb user password | openssl base64
# # Or create a new file with the credentials you want and then convert it when your are done
# # htpasswd -c auth username
# # *enter and reenter password*
# # htpasswd auth username2
# # *enter and reenter password*
# # base64 auth
# # copy and paste into below
# # the |2 should stay regardless of how many users. It is yaml syntax.
# # Below are username/passwords test/test and test2/test2
# # https://doc.traefik.io/traefik/middlewares/basicauth/
# apiVersion: v1
# kind: Secret
# metadata:
#   name: basic-auth
#   namespace: testauth
# data:
#   users: |
#     dGVzdDokYXByMSRMTkN0bEVYeiQ5NnJJYmg0azFJZDhRRjBjYUx6Si4xCg==

---
apiVersion: v1
data:
  auth: YXNkZjoxMjM0NTY3ODkwJFM5NjJDb2RlQXBwbGljYXRpb24K
kind: Secret
metadata:
  name: basic-auth
  namespace: testauth
type: Opaque
