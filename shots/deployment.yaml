apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -o deployment.yaml -n shot --replicas 3
    kompose.image-pull-secret: regcred
    kompose.service.expose: shots.wayl.one, shots.k.waylonwalker.com
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: shot-wayl-one
  name: shot-wayl-one
  namespace: shot
spec:
  ports:
    - name: "5000"
      port: 5000
      targetPort: 5000
  selector:
    io.kompose.service: shot-wayl-one
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: shot
  namespace: shot
spec: {}
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -o deployment.yaml -n shot --replicas 3
    kompose.image-pull-secret: regcred
    kompose.service.expose: shots.wayl.one, shots.k.waylonwalker.com
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: shot-wayl-one
  name: shot-wayl-one
  namespace: shot
spec:
  selector:
    matchLabels:
      io.kompose.service: shot-wayl-one
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -o deployment.yaml -n shot --replicas 3
        kompose.image-pull-secret: regcred
        kompose.service.expose: shots.wayl.one, shots.k.waylonwalker.com
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/shot-scraper-api-default: "true"
        io.kompose.service: shot-wayl-one
    spec:
      containers:
        - image: docker.io/waylonwalker/shot-scraper-api:0.0.1
          name: shot-wayl-one
          ports:
            - containerPort: 5000
              protocol: TCP
          resources:
            requests:
              cpu: "10m" # Minimum CPU required (100 millicores)
            limits:
              cpu: "500m" # Maximum CPU the container can use
          env:
            - name: ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: shots-secret
                  key: ACCESS_KEY
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: shots-secret
                  key: SECRET_KEY
      restartPolicy: Always
status: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: shot-wayl-one
  name: shot-wayl-one
  namespace: shot
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  rules:
    - host: shots.wayl.one
      http:
        paths:
          - backend:
              service:
                name: shot-wayl-one
                port:
                  number: 5000
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - shots.wayl.one
      secretName: shots-cert-tls
status:
  loadBalancer: {}
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: shot-wayl-one-hpa
  namespace: shot
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: shot-wayl-one
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
