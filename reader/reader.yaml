apiVersion: v1
kind: Namespace
metadata:
  name: reader
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: markata-cache-pv
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany # Ensure your use case allows this, as hostPath is node-specific
  persistentVolumeReclaimPolicy: Retain
  storageClassName: hostpath
  hostPath:
    path: /mnt/vault/nfs/general/pv/reader/markata-cache
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: markata-cache-pvc
  namespace: reader
spec:
  volumeName: markata-cache-pv
  storageClassName: hostpath
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: reader-cronjob
  namespace: reader
spec:
  schedule: "0 * * * *"
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 120
  successfulJobsHistoryLimit: 6
  failedJobsHistoryLimit: 6
  jobTemplate:
    spec:
      template:
        spec:
          # tolerations:
          #   - key: "performance"
          #     operator: "Equal"
          #     value: "low"
          #     effect: "NoSchedule"
          # volumes:
          #   - name: markata-cache
          #     persistentVolumeClaim:
          #       claimName: markata-cache-pvc
          containers:
            - name: reader-container
              image: registry.wayl.one/reader-waylonwalker-com:0.4.0
              env:
                - name: CLOUDFLARE_API_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: reader-secret
                      key: cloudflare-secret
                      # volumeMounts:
                      #   - name: markata-cache
                      #     mountPath: /app/.markata.cache
          imagePullSecrets:
            - name: regcred
          restartPolicy: OnFailure
          activeDeadlineSeconds: 1800
