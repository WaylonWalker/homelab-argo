apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert --namespace frigate -o frigate.yaml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: frigate
  name: frigate
  namespace: frigate
spec:
  ports:
    - name: "5000"
      port: 5000
    - name: "8554"
      port: 8554
    - name: "8555"
      port: 8555
    - name: 8555-udp
      port: 8555
      protocol: UDP
  type: ClusterIP
  selector:
    io.kompose.service: frigate
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: frigate
  namespace: frigate
spec: {}
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert --namespace frigate -o frigate.yaml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: frigate
  name: frigate
  namespace: frigate
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: frigate
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert --namespace frigate -o frigate.yaml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/frigate-default: "true"
        io.kompose.service: frigate
    spec:
      containers:
        - env:
            - name: FRIGATE_RTSP_PASSWORD
              value: '"password"'
            - name: TZ
              value: America/Chicago
          image: ghcr.io/blakeblackshear/frigate:stable
          name: frigate
          ports:
            - containerPort: 5000
              # hostPort: 5000
              protocol: TCP
            - containerPort: 8554
              # hostPort: 8554
              protocol: TCP
            - containerPort: 8555
              # hostPort: 8555
              protocol: TCP
            - containerPort: 8555
              # hostPort: 8555
              protocol: UDP

          resources: {}
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /config
              name: config
              subPath: "pv/frigate/frigate-config"
            - mountPath: /media/frigate
              name: storage
              subPath: "pv/frigate/frigate-storage"
            - mountPath: /tmp/cache
              name: frigate-temp
              subPath: "pv/frigate/frigate-temp"
      restartPolicy: Always
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: config
        - name: storage
          persistentVolumeClaim:
            claimName: storage
        - name: frigate-temp
          persistentVolumeClaim:
            claimName: frigate-temp
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: config
  name: config
  namespace: frigate
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
  volumeName: pv-nfs-general-config
  storageClassName: falcon-nfs
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: storage
  name: storage
  namespace: frigate
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
  volumeName: pv-nfs-general-storage
  storageClassName: falcon-nfs
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: frigate-temp
  name: frigate-temp
  namespace: frigate
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
  volumeName: pv-nfs-general-temp
  storageClassName: falcon-nfs
status: {}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kompose.cmd: kompose convert -o deployment.yaml -n frigate
    kompose.service.expose: frigate.wayl.one
    kompose.version: 1.31.2 (a92241f79)
    traefik.ingress.kubernetes.io/router.middlewares: frigate-basic-auth@kubernetescrd
  creationTimestamp: null
  labels:
    io.kompose.service: frigate
  name: frigate
  namespace: frigate
spec:
  rules:
    - host: frigate.wayl.one
      http:
        paths:
          - backend:
              service:
                name: frigate
                port:
                  number: 5000
            path: /
            pathType: Prefix
status:
  loadBalancer: {}

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-nfs-general-config
spec:
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteMany # NFS generally supports ReadWriteMany
  persistentVolumeReclaimPolicy: Retain # Change to 'Delete' if you want it to be deleted with the PVC
  storageClassName: falcon-nfs
  mountOptions:
    - hard
    - nfsvers=4.1
  nfs:
    path: /mnt/vault/nfs/general/
    server: falcon # Your NFS server hostname or IP

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-nfs-general-storage
spec:
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteMany # NFS generally supports ReadWriteMany
  persistentVolumeReclaimPolicy: Retain # Change to 'Delete' if you want it to be deleted with the PVC
  storageClassName: falcon-nfs
  mountOptions:
    - hard
    - nfsvers=4.1
  nfs:
    path: /mnt/vault/nfs/general/
    server: falcon # Your NFS server hostname or IP

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-nfs-general-temp
spec:
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteMany # NFS generally supports ReadWriteMany
  persistentVolumeReclaimPolicy: Retain # Change to 'Delete' if you want it to be deleted with the PVC
  storageClassName: falcon-nfs
  mountOptions:
    - hard
    - nfsvers=4.1
  nfs:
    path: /mnt/vault/nfs/general/
    server: falcon # Your NFS server hostname or IP

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: falcon-nfs
provisioner: example.com/external-nfs
parameters:
  path: /mnt/vault/nfs/general/
  server: falcon # Your NFS server hostname or IP
  # server: nfs-server.example.com
  # path: /share
  readOnly: "false"

---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: frigate-basic-auth
spec:
  basicAuth:
    secret: frigate-basic-auth
