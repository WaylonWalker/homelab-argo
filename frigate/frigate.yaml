apiVersion: v1
kind: Namespace
metadata:
  name: frigate
  namespace: frigate
---
apiVersion: v1
kind: Service
metadata:
  name: frigate
  namespace: frigate
spec:
  ports:
    - name: "unauthenticated-ui"
      port: 5000
    - name: "authenticated-ui"
      port: 8971
    - name: "rstp-streams"
      port: 8554
    - name: "webrtc"
      port: 8555
    - name: "8555-udp"
      port: 8555
      protocol: UDP
  type: ClusterIP
  selector:
    service: frigate
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: frigate
  name: frigate
  namespace: frigate
spec:
  replicas: 1
  selector:
    matchLabels:
      service: frigate
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        service: frigate
    spec:
      containers:
        - env:
            - name: FRIGATE_RTSP_PASSWORD
              value: '"password"'
            - name: TZ
              value: America/Chicago
            # https://docs.frigate.video/configuration/hardware_acceleration/#via-vaapi
            - name: LIBVA_DRIVER_NAME
              value: i965
          # image: ghcr.io/blakeblackshear/frigate:9c75123
          image: ghcr.io/blakeblackshear/frigate:stable
          # image: ghcr.io/blakeblackshear/frigate@sha256:22e3d0b486df52c3d669682254c2b1bf4205fa6ad8bd8f8c9f7fe76b1517005d"
          name: frigate
          ports:
            - containerPort: 5000
              protocol: TCP
            - containerPort: 8971
              protocol: TCP
            - containerPort: 8554
              protocol: TCP
            - containerPort: 8555
              protocol: TCP
            - containerPort: 8555
              protocol: UDP
          securityContext:
            privileged: true
          resources:
            limits:
              gpu.intel.com/i915: 1
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /media/frigate
              name: storage
            - mountPath: /tmp/cache
              name: frigate-temp
            - mountPath: /dev/shm
              name: cache-volume
            - name: coral-device
              mountPath: /dev/apex_0
              readOnly: true
            - name: qsv-device
              mountPath: /dev/dri
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: config
        - name: storage
          persistentVolumeClaim:
            claimName: storage
        - name: frigate-temp
          persistentVolumeClaim:
            claimName: frigate-temp
        - emptyDir:
            medium: Memory
            sizeLimit: 1Gi
          name: cache-volume
        - name: coral-device
          hostPath:
            type: CharDevice
            path: /dev/apex_0
        - name: qsv-device
          hostPath:
            type: Directory
            path: /dev/dri
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: config
  namespace: frigate
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
  volumeName: pv-hostpath-general-config
  storageClassName: hostpath
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: storage
  namespace: frigate
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
  volumeName: pv-hostpath-general-storage
  storageClassName: hostpath
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: frigate-temp
  namespace: frigate
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
  volumeName: pv-hostpath-general-temp
  storageClassName: hostpath
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    service: frigate
  name: frigate
  namespace: frigate
spec:
  ingressClassName: traefik
  rules:
    - host: frigate.wayl.one
      http:
        paths:
          - backend:
              service:
                name: frigate
                port:
                  number: 8971
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - frigate.wayl.one
      secretName: frigate-cert-tls
status:
  loadBalancer: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    service: frigate
  name: ffrigate
  namespace: frigate
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: traefik
  rules:
    - host: f.wayl.one
      http:
        paths:
          - backend:
              service:
                name: frigate
                port:
                  number: 8971
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - f.wayl.one
      secretName: ffrigate-cert-tls
status:
  loadBalancer: {}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-hostpath-general-config
spec:
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteMany # Ensure your use case allows this, as hostPath is node-specific
  persistentVolumeReclaimPolicy: Retain
  storageClassName: hostpath
  hostPath:
    path: /mnt/vault/nfs/general/pv/frigate4/frigate-config
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-hostpath-general-storage
spec:
  capacity:
    storage: 10000Mi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: hostpath
  hostPath:
    path: /mnt/vault/nfs/general/pv/frigate4/frigate-storage
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-hostpath-general-temp
  namespace: frigate
spec:
  capacity:
    storage: 1000Mi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: hostpath
  hostPath:
    path: /mnt/vault/nfs/general/pv/frigate4/frigate-temp
    type: DirectoryOrCreate
