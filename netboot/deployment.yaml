apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert --namespace netboot -o deployment.yaml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: netbootxyz
  name: netbootxyz
  namespace: netboot
spec:
  ports:
    - name: "3000"
      port: 3000
      targetPort: 3000
    - name: "69"
      port: 69
      protocol: UDP
      targetPort: 69
    - name: "8080"
      port: 8080
      targetPort: 80
  selector:
    io.kompose.service: netbootxyz
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: netboot
  namespace: netboot
spec: {}
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert --namespace netboot -o deployment.yaml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: netbootxyz
  name: netbootxyz
  namespace: netboot
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: netbootxyz
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert --namespace netboot -o deployment.yaml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/netboot-default: "true"
        io.kompose.service: netbootxyz
    spec:
      containers:
        - env:
            - name: PGID
              value: "1000"
            - name: PUID
              value: "1000"
            - name: TZ
              value: Etc/UTC
          image: lscr.io/linuxserver/netbootxyz:latest
          name: netbootxyz
          ports:
            - containerPort: 3000
              hostPort: 3000
              protocol: TCP
            - containerPort: 69
              hostPort: 69
              protocol: UDP
            - containerPort: 80
              hostPort: 8080
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /config
              name: config
              subPath: "pv/netboot/config"
            - mountPath: /assets
              name: assets
              subPath: "pv/netboot/assets"
      restartPolicy: Always
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: config
        - name: assets
          persistentVolumeClaim:
            claimName: assets
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: config
  name: config
  namespace: netboot
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
  volumeName: pv-nfs-general-netboot-config
  storageClassName: falcon-nfs
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: assets
  name: assets
  namespace: netboot
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
  volumeName: pv-nfs-general-netboot-assets
  storageClassName: falcon-nfs
status: {}

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-nfs-general-netboot-config
  namespace: terraria-challenge
spec:
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteMany # NFS generally supports ReadWriteMany
  persistentVolumeReclaimPolicy: Retain # Change to 'Delete' if you want it to be deleted with the PVC
  storageClassName: falcon-nfs
  mountOptions:
    - hard
    - nfsvers=4.1
  nfs:
    path: /mnt/vault/nfs/general/
    server: 192.168.1.106 # Your NFS server hostname or IP

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-nfs-general-netboot-assets
  namespace: terraria-challenge
spec:
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteMany # NFS generally supports ReadWriteMany
  persistentVolumeReclaimPolicy: Retain # Change to 'Delete' if you want it to be deleted with the PVC
  storageClassName: falcon-nfs
  mountOptions:
    - hard
    - nfsvers=4.1
  nfs:
    path: /mnt/vault/nfs/general/
    server: 192.168.1.106 # Your NFS server hostname or IP

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: falcon-nfs
  namespace: terraria-challenge
provisioner: example.com/external-nfs
parameters:
  path: /mnt/vault/nfs/general/
  server: 192.168.1.106 # Your NFS server hostname or IP
  # server: nfs-server.example.com
  # path: /share
  readOnly: "false"
