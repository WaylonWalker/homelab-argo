apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -n podfetch -o deployment.yaml
    kompose.service.expose: podfetch.wayl.one
    kompose.version: 1.35.0 (9532ceef3)
  labels:
    io.kompose.service: podfetch
  name: podfetch
  namespace: podfetch
spec:
  ports:
    - name: "80"
      port: 80
      targetPort: 8000
  selector:
    io.kompose.service: podfetch
---
apiVersion: v1
kind: Namespace
metadata:
  name: podfetch
  namespace: podfetch
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -n podfetch -o deployment.yaml
    kompose.service.expose: podfetch.wayl.one
    kompose.version: 1.35.0 (9532ceef3)
  labels:
    io.kompose.service: podfetch
  name: podfetch
  namespace: podfetch
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: podfetch
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -n podfetch -o deployment.yaml
        kompose.service.expose: podfetch.wayl.one
        kompose.version: 1.35.0 (9532ceef3)
      labels:
        io.kompose.service: podfetch
    spec:
      containers:
        - env:
            - name: DATABASE_URL
              value: sqlite:///app/db/podcast.db
            - name: POLLING_INTERVAL
              value: "60"
            - name: SERVER_URL
              value: https://podfetch.wayl.one
          image: samuel19982/podfetch:latest
          name: podfetch
          ports:
            - containerPort: 8000
              protocol: TCP
          # securityContext:
          #   runAsGroup: 1000
          #   runAsUser: 1000
          volumeMounts:
            - mountPath: /app/podcasts
              name: podfetch-podcasts
            - mountPath: /app/db
              name: podfetch-db
      restartPolicy: Always
      volumes:
        - name: podfetch-podcasts
          persistentVolumeClaim:
            claimName: podfetch-podcasts
        - name: podfetch-db
          persistentVolumeClaim:
            claimName: podfetch-db
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kompose.cmd: kompose convert -n podfetch -o deployment.yaml
    kompose.service.expose: podfetch.wayl.one
    kompose.version: 1.35.0 (9532ceef3)
  labels:
    io.kompose.service: podfetch
  name: podfetch
  namespace: podfetch
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    traefik.ingress.kubernetes.io/router.middlewares: basic-auth-basic-auth@kubernetescrd
spec:
  rules:
    - host: podfetch.wayl.one
      http:
        paths:
          - backend:
              service:
                name: podfetch
                port:
                  number: 80
            path: /
            pathType: Prefix
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: podfetch-podcasts
  name: podfetch-podcasts
  namespace: podfetch
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
  volumeName: pv-hostpath-general-podfetch-podcasts
  storageClassName: hostpath
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-hostpath-general-podfetch-podcasts
  namespace: podfetch
spec:
  accessModes:
    - ReadWriteMany
  capacity:
    storage: 50Gi
  storageClassName: hostpath
  hostPath:
    path: /mnt/vault/nfs/general/pv/podfetch/podcasts
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: podfetch-db
  name: podfetch-db
  namespace: podfetch
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  volumeName: pv-hostpath-general-podfetch-db
  storageClassName: hostpath
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-hostpath-general-podfetch-db
  namespace: podfetch
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 10Gi
  storageClassName: hostpath
  hostPath:
    path: /mnt/vault/nfs/general/pv/podfetch/db
    type: DirectoryOrCreate
