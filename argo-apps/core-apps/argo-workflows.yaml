apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argo-workflows
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://argoproj.github.io/argo-helm
    chart: argo-workflows
    targetRevision: 0.45.10
    helm:
      values: |
        server:
          extraArgs:
            - --auth-mode=server
          ingress:
            enabled: true
            ingressClassName: traefik
            hosts:
              - argo-workflows.wayl.one
            annotations:
              traefik.ingress.kubernetes.io/router.entrypoints: websecure
              traefik.ingress.kubernetes.io/router.tls: "true"
        useDefaultArtifactRepo: true
        useStaticCredentials: false
        artifactRepository:
          archiveLogs: true
          s3:
            bucket: argo-workflows
            endpoint: minio.default.svc.cluster.local:9000
            insecure: true
            accessKeySecret:
              name: argo-workflows-minio
              key: accesskey
            secretKeySecret:
              name: argo-workflows-minio
              key: secretkey
        serviceAccount:
          create: true
          name: argo-workflows
          annotations: {}
        workflow:
          serviceAccount:
            create: true
            name: argo-workflow
            annotations: {}
  destination:
    server: https://kubernetes.default.svc
    namespace: argo-workflows
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-admin
  namespace: argo-workflows
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-admin-role
rules:
  - apiGroups:
      - argoproj.io
    resources:
      - workflows
      - workflows/finalizers
      - workflowtemplates
      - workflowtemplates/finalizers
      - cronworkflows
      - cronworkflows/finalizers
      - workfloweventbindings
      - workfloweventbindings/finalizers
      - clusterworkflowtemplates
      - clusterworkflowtemplates/finalizers
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/exec
      - pods/log
      - services
      - events
      - persistentvolumeclaims
      - configmaps
      - secrets
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    verbs:
      - get
      - list
  - apiGroups:
      - argoproj.io
    resources:
      - eventsources
      - sensors
      - workflows
      - workflowtemplates
      - cronworkflows
      - clusterworkflowtemplates
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-admin-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-admin-role
subjects:
  - kind: ServiceAccount
    name: argo-admin
    namespace: argo-workflows
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: argo-admin-workflow-role
  namespace: reader
rules:
  - apiGroups:
      - argoproj.io
    resources:
      - workflows
      - workflows/finalizers
      - workflowtemplates
      - workflowtemplates/finalizers
      - cronworkflows
      - cronworkflows/finalizers
      - workfloweventbindings
      - workfloweventbindings/finalizers
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argo-admin-workflow-binding
  namespace: reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argo-admin-workflow-role
subjects:
  - kind: ServiceAccount
    name: argo-admin
    namespace: argo-workflows
