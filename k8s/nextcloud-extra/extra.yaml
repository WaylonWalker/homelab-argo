apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-nextcloud-html
  namespace: nextcloud
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: hostpath
  hostPath:
    path: /mnt/main/nextcloud/html
    type: DirectoryOrCreate
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: nextcloud-storage
              operator: In
              values:
                - "true"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nextcloud-html
  namespace: nextcloud
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: hostpath
  volumeName: pv-nextcloud-html
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-nextcloud-data
  namespace: nextcloud
spec:
  capacity:
    storage: 2Ti
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: hostpath
  hostPath:
    path: /mnt/main/nextcloud/data
    type: DirectoryOrCreate
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: nextcloud-storage
              operator: In
              values:
                - "true"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nextcloud-data
  namespace: nextcloud
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: hostpath
  volumeName: pv-nextcloud-data
  resources:
    requests:
      storage: 2Ti
---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: nextcloud-db
  namespace: nextcloud
  annotations:
    rebalance.cnpg.io/trigger: "2025-04-16"
spec:
  instances: 3
  storage:
    storageClass: longhorn-backup
    size: 5Gi
  bootstrap:
    # recovery:
    #   barmanObjectStore:
    #     destinationPath: "s3://nextcloud/db"
    #     endpointURL: "http://minio.minio.svc.cluster.local:9000"
    #     s3Credentials:
    #       accessKeyId:
    #         name: nextcloud-minio-secret
    #         key: AWS_ACCESS_KEY_ID
    #       secretAccessKey:
    #         name: nextcloud-minio-secret
    #         key: AWS_SECRET_ACCESS_KEY
    #       region:
    #         name: nextcloud-minio-secret
    #         key: AWS_REGION
    #     wal:
    #       compression: gzip
    #     data:
    #       compression: gzip
    #   target:
    #     backupID: "20250703T023000"  # replace with your actual backup folder name
    initdb:
      database: nextcloud
      owner: nextcloud
      secret:
        name: nextcloud-extra-secret
  monitoring:
    enablePodMonitor: true
  backup:
    retentionPolicy: 30d
    barmanObjectStore:
      wal:
        compression: gzip
      data:
        compression: gzip
      endpointURL: "http://minio.minio.svc.cluster.local:9000"
      destinationPath: "s3://nextcloud/db"
      s3Credentials:
        accessKeyId:
          name: nextcloud-minio-secret
          key: AWS_ACCESS_KEY_ID
        secretAccessKey:
          name: nextcloud-minio-secret
          key: AWS_SECRET_ACCESS_KEY
        region:
          name: nextcloud-minio-secret
          key: AWS_REGION
---
apiVersion: postgresql.cnpg.io/v1
kind: Backup
metadata:
  name: nextcloud-db-backup
  namespace: nextcloud
spec:
  cluster:
    name: nextcloud-db
  method: barmanObjectStore

# ---
# apiVersion: apps/v1
# kind: StatefulSet
# metadata:
#   name: nextcloud-redis
#   namespace: nextcloud
# spec:
#   serviceName: nextcloud-redis
#   replicas: 1
#   selector:
#     matchLabels:
#       app: nextcloud-redis
#   template:
#     metadata:
#       labels:
#         app: nextcloud-redis
#     spec:
#       nodeSelector:
#         nextcloud-storage: "true"
#       containers:
#         - name: redis
#           image: redis:7.2-alpine
#           command:
#             - redis-server
#             - "/etc/redis/redis.conf"
#           resources:
#             requests:
#               cpu: 100m
#               memory: 128Mi
#             limits:
#               cpu: 200m
#               memory: 256Mi
#           ports:
#             - containerPort: 6379
#               name: redis
#           volumeMounts:
#             - name: redis-data
#               mountPath: /data
#             - name: redis-config
#               mountPath: /etc/redis
#           securityContext:
#             runAsUser: 999
#             runAsGroup: 999
#       volumes:
#         - name: redis-config
#           configMap:
#             name: nextcloud-redis-config
#   volumeClaimTemplates:
#     - metadata:
#         name: redis-data
#       spec:
#         accessModes: ["ReadWriteOnce"]
#         storageClassName: local-path
#         resources:
#           requests:
#             storage: 20Gi
# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: nextcloud-redis-config
#   namespace: nextcloud
# data:
#   redis.conf: |
#     dir /data
#     appendonly yes
#     appendfsync everysec
#     save 900 1
#     save 300 10
#     save 60 10000
#     maxmemory 200mb
#     maxmemory-policy allkeys-lru
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: nextcloud-redis
#   namespace: nextcloud
# spec:
#   selector:
#     app: nextcloud-redis
#   ports:
#     - port: 6379
#       targetPort: redis
#       name: redis
