apiVersion: v1
kind: Namespace
metadata:
  name: jellyfin
  namespace: jellyfin
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: jellyfin
  name: jellyfin
  namespace: jellyfin
spec:
  replicas: 1
  selector:
    matchLabels:
      service: jellyfin
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        service: jellyfin
    spec:
      nodeSelector:
        jellyfin-storage: "true"
      containers:
        - env:
            - name: JELLYFIN_PublishedServerUrl
              value: https://jellyfin.wayl.one
          image: docker.io/jellyfin/jellyfin
          name: jellyfin
          ports:
            - containerPort: 8096
              hostPort: 8096
              protocol: TCP
          # resources:
          #   limits:
          #     gpu.intel.com/i915: 1
          volumeMounts:
            - mountPath: /config
              name: jellyfin-config-falcon3
            - mountPath: /cache
              name: jellyfin-cache-falcon3
            - mountPath: /media
              name: jellyfin-media-falcon3
            - name: qsv-device
              mountPath: /dev/dri
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: jellyfin-config-falcon3
          persistentVolumeClaim:
            claimName: jellyfin-config-falcon3
        - name: jellyfin-cache-falcon3
          persistentVolumeClaim:
            claimName: jellyfin-cache-falcon3
        - name: jellyfin-media-falcon3
          persistentVolumeClaim:
            claimName: jellyfin-media-falcon3
        - name: qsv-device
          hostPath:
            type: Directory
            path: /dev/dri
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: jellyfin
  name: jellyfin
  namespace: jellyfin
spec:
  ports:
    - name: "8096"
      port: 8096
      targetPort: 8096
  selector:
    service: jellyfin
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    service: jellyfin
  name: jellyfin
  namespace: jellyfin
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  rules:
    - host: jellyfin.wayl.one
      http:
        paths:
          - backend:
              service:
                name: jellyfin
                port:
                  number: 8096
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - jellyfin.wayl.one
      secretName: jellyfin-cert-tls
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    service: jellyfin-config-falcon3
  name: jellyfin-config-falcon3
  namespace: jellyfin
spec:
  storageClassName: manual
  volumeName: jellyfin-config-falcon3
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    service: jellyfin-cache-falcon3
  name: jellyfin-cache-falcon3
  namespace: jellyfin
spec:
  storageClassName: manual
  volumeName: jellyfin-cache-falcon3
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    service: jellyfin-media-falcon3
  name: jellyfin-media-falcon3
  namespace: jellyfin
spec:
  storageClassName: manual
  volumeName: jellyfin-media-falcon3
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3000Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jellyfin-media-falcon3
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 6Ti
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/main/media/media
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jellyfin-cache-falcon3
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/main/media/cache
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jellyfin-config-falcon3
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/main/media/config
