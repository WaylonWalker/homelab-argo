apiVersion: v1
kind: Namespace
metadata:
  name: forgejo
---
apiVersion: v1
kind: Service
metadata:
  name: forgejo
  namespace: forgejo
spec:
  selector:
    service: forgejo
  ports:
    - name: web
      port: 3000
      targetPort: 3000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: forgejo
  namespace: forgejo
  labels:
    service: forgejo
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      service: forgejo
  template:
    metadata:
      labels:
        service: forgejo
      annotations:
        diun.enable: "true"
    spec:
      securityContext:
        # runAsUser: 1000
        # runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: forgejo
          image: codeberg.org/forgejo/forgejo:11
          env:
            - name: USER_UID
              value: "1000"
            - name: USER_GID
              value: "1000"
            - name: TZ
              value: America/Chicago
            - name: FORGEJO__server__ROOT_URL
              value: "https://git.wayl.one/"
            - name: FORGEJO__server__PROTOCOL
              value: "http"
            - name: FORGEJO__server__HTTP_ADDR
              value: "0.0.0.0"
            - name: FORGEJO__server__HTTP_PORT
              value: "3000"
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/v1/version
              port: 3000
            initialDelaySeconds: 20
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/v1/version
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            requests:
              cpu: "1"
              memory: 2Gi
            limits:
              cpu: "2"
              memory: 6Gi
          volumeMounts:
            - name: forgejo-data
              mountPath: /data
      volumes:
        - name: forgejo-data
          persistentVolumeClaim:
            claimName: forgejo-data
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: forgejo
  namespace: forgejo
spec:
  minAvailable: 1
  selector:
    matchLabels:
      service: forgejo
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: forgejo-data
  namespace: forgejo
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: longhorn-backup
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: forgejo
  namespace: forgejo
  labels:
    service: forgejo
    # If you're using cert-manager, you can add annotations like:
    # annotations:
    #   cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: traefik
  tls:
    - hosts:
        - git.wayl.one
        - git.waylonwalker.com
      secretName: forgejo-cert-tls
  rules:
    - host: git.wayl.one
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: forgejo
                port:
                  number: 3000
    - host: git.waylonwalker.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: forgejo
                port:
                  number: 3000
