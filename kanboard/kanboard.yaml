apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert --namespace kanboard -o kanboard.yaml
    kompose.service.expose: kanboard.wayl.one
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: kanboard
  name: kanboard
  namespace: kanboard
spec:
  ports:
    - name: "80"
      port: 80
      targetPort: 80
    - name: "443"
      port: 443
      targetPort: 443
  selector:
    io.kompose.service: kanboard
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: kanboard
  namespace: kanboard
spec: {}
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert --namespace kanboard -o kanboard.yaml
    kompose.service.expose: kanboard.wayl.one
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: kanboard
  name: kanboard
  namespace: kanboard
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kanboard
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert --namespace kanboard -o kanboard.yaml
        kompose.service.expose: kanboard.wayl.one
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/kanboard-default: "true"
        io.kompose.service: kanboard
    spec:
      containers:
        - env:
            - name: TZ
              value: UTC
          image: kanboard/kanboard:latest
          name: kanboard
          ports:
            - containerPort: 80
              protocol: TCP
            - containerPort: 443
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /var/www/app/data
              name: kanboard-data
            - mountPath: /var/www/app/plugins
              name: kanboard-plugins
            - mountPath: /etc/nginx/ssl
              name: kanboard-ssl
      restartPolicy: Always
      volumes:
        - name: kanboard-data
          persistentVolumeClaim:
            claimName: kanboard-data
        - name: kanboard-plugins
          persistentVolumeClaim:
            claimName: kanboard-plugins
        - name: kanboard-ssl
          persistentVolumeClaim:
            claimName: kanboard-ssl
status: {}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kompose.cmd: kompose convert --namespace kanboard -o kanboard.yaml
    kompose.service.expose: kanboard.wayl.one
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: kanboard
  name: kanboard
  namespace: kanboard
spec:
  rules:
    - host: kanboard.wayl.one
      http:
        paths:
          - backend:
              service:
                name: kanboard
                port:
                  number: 80
            path: /
            pathType: Prefix
status:
  loadBalancer: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: kanboard-data
  name: kanboard-data
  namespace: kanboard
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: kanboard-plugins
  name: kanboard-plugins
  namespace: kanboard
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: kanboard-ssl
  name: kanboard-ssl
  namespace: kanboard
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
